{"version":3,"file":"695.js","mappings":"kqCA6EA,QApEc,WACZ,OAA4CA,EAAAA,EAAAA,IAAO,aAAcC,EAAAA,GAAzDC,EAAR,EAAQA,KAAaC,GAArB,EAAcC,MAAd,EAAqBD,YACrB,GADA,EAAiCE,OACjC,GAAoCC,EAAAA,EAAAA,WAAS,GAA7C,IAAOC,EAAP,KAAmBC,EAAnB,KACA,KAA+BC,EAAAA,EAAAA,GAAS,IAAxC,GAAOC,EAAP,KAAcC,EAAd,KACA,KAAqCF,EAAAA,EAAAA,GAAS,CAAC,KAA/C,GAAOG,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,cACf,SAACC,GACCA,EAAEC,iBACFT,GAAc,GACdU,IAAAA,KAEI,mBACA,CAAER,MAAAA,EAAOE,SAAAA,GACT,CACEO,iBAAiB,IAGpBC,MAAK,SAACC,GAELlB,OAEDmB,OAAM,SAAClB,GAAU,QAChBI,EAAmD,OAArC,UAAAJ,EAAMiB,gBAAN,mBAAgBnB,YAAhB,eAAsBqB,kBAG1C,CAACb,EAAOE,IAGV,YAAaY,IAATtB,EACK,yCAGLA,EACK,gBAAC,KAAD,CAAUuB,GAAG,iCASpB,uBAAKC,GAAG,aACN,gBAAC,KAAD,eACA,gBAAC,KAAD,CAAMZ,SAAUA,GACd,gBAAC,KAAD,CAAOY,GAAG,eACR,qCACA,2BACE,gBAAC,KAAD,CAAOC,KAAK,QAAQD,GAAG,QAAQE,KAAK,QAAQC,MAAOnB,EAAOoB,SAAUnB,MAGxE,gBAAC,KAAD,CAAOe,GAAG,kBACR,wCACA,2BACE,gBAAC,KAAD,CAAOC,KAAK,WAAWD,GAAG,WAAWE,KAAK,WAAWC,MAAOjB,EAAUkB,SAAUjB,KAEjFN,GAAc,gBAAC,KAAD,qBAEjB,gBAAC,KAAD,CAAQoB,KAAK,UAAb,UAEF,gBAAC,KAAD,mCAEE,gBAAC,KAAD,CAAMF,GAAG,WAAT","sources":["webpack://slack-clone/./pages/LogIn/index.tsx"],"sourcesContent":["import useInput from '@hooks/useInput';\nimport { Button, Error, Form, Header, Input, Label, LinkContainer } from '@pages/SignUp/styles';\nimport fetcher from '@utils/fetcher';\nimport axios from 'axios';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport useSWR from 'swr';\nimport { Redirect } from 'react-router';\n\nconst LogIn = () => {\n  const { data, error, revalidate, mutate } = useSWR('/api/users', fetcher);\n  const [logInError, setLogInError] = useState(false);\n  const [email, onChangeEmail] = useInput('');\n  const [password, onChangePassword] = useInput(['']);\n  const onSubmit = useCallback(\n    (e) => {\n      e.preventDefault();\n      setLogInError(false);\n      axios\n        .post(\n          '/api/users/login',\n          { email, password },\n          {\n            withCredentials: true,\n          },\n        )\n        .then((response) => {\n          // mutate(response.data, false);\n          revalidate();\n        })\n        .catch((error) => {\n          setLogInError(error.response?.data?.statusCode === 401);\n        });\n    },\n    [email, password],\n  );\n\n  if (data === undefined) {\n    return <div>Loading...</div>;\n  }\n\n  if (data) {\n    return <Redirect to=\"/workspace/sleact/channel/일반\" />;\n  }\n\n  // if (!error && userData) {\n  //   console.log('로그인됨', userData);\n  //   return <Redirect to=\"/workspace/sleact/channel/일반\" />;\n  // }\n\n  return (\n    <div id=\"container\">\n      <Header>Sleact</Header>\n      <Form onSubmit={onSubmit}>\n        <Label id=\"email-label\">\n          <span>Email</span>\n          <div>\n            <Input type=\"email\" id=\"email\" name=\"email\" value={email} onChange={onChangeEmail} />\n          </div>\n        </Label>\n        <Label id=\"password-label\">\n          <span>Password</span>\n          <div>\n            <Input type=\"password\" id=\"password\" name=\"password\" value={password} onChange={onChangePassword} />\n          </div>\n          {logInError && <Error>Not matched</Error>}\n        </Label>\n        <Button type=\"submit\">LogIn</Button>\n      </Form>\n      <LinkContainer>\n        You are not registed yet? &nbsp;\n        <Link to=\"/signup\">Sign Up</Link>\n      </LinkContainer>\n    </div>\n  );\n};\n\nexport default LogIn;\n"],"names":["useSWR","fetcher","data","revalidate","error","mutate","useState","logInError","setLogInError","useInput","email","onChangeEmail","password","onChangePassword","onSubmit","useCallback","e","preventDefault","axios","withCredentials","then","response","catch","statusCode","undefined","to","id","type","name","value","onChange"],"sourceRoot":""}