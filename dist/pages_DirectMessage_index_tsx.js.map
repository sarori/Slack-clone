{"version":3,"file":"pages_DirectMessage_index_tsx.js","mappings":"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","sources":["webpack://slack-clone/./pages/DirectMessage/index.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Container, DragOver, Header } from '@pages/DirectMessage/styles';\nimport { useParams } from 'react-router';\nimport useSWR, { useSWRInfinite } from 'swr';\nimport fetcher from '@utils/fetcher';\nimport gravatar from 'gravatar';\nimport ChatBox from '@components/ChatBox';\nimport ChatList from '@components/ChatList';\nimport useInput from '@hooks/useInput';\nimport axios from 'axios';\nimport { IDM } from '@typings/db';\nimport makeSection from '@utils/makeSection';\nimport Scrollbars from 'react-custom-scrollbars';\nimport useSocket from '@hooks/useSocket';\n\nconst DirectMessage = () => {\n  const { workspace, id } = useParams<{ workspace: string; id: string }>();\n  const { data: userData } = useSWR(`/api/workspaces/${workspace}/users/${id}`, fetcher);\n  const { data: myData } = useSWR('/api/users', fetcher);\n  const scrollbarRef = useRef<Scrollbars>(null);\n  const [chat, onChangeChat, setChat] = useInput('');\n  const {\n    data: chatData,\n    mutate: mutateChat,\n    revalidate,\n    setSize,\n  } = useSWRInfinite<IDM[]>(\n    (index) => `/api/workspaces/${workspace}/dms/${id}/chats?perPage=20&page=${index + 1}`,\n    fetcher,\n  );\n  const isEmpty = chatData?.[0]?.length === 0;\n  const isReachingEnd = isEmpty || (chatData && chatData[chatData.length - 1]?.length < 20) || false;\n  const [socket] = useSocket(workspace);\n  const [dragOver, setDragOver] = useState(false);\n\n  const onSubmitForm = useCallback(\n    (e) => {\n      e.preventDefault();\n      if (chat?.trim() && chatData) {\n        const savedChat = chat;\n        mutateChat((prevChatData) => {\n          prevChatData?.[0].unshift({\n            id: (chatData[0][0]?.id || 0) + 1,\n            content: savedChat,\n            SenderId: myData.id,\n            Sender: myData,\n            ReceiverId: userData.id,\n            Receiver: userData,\n            createdAt: new Date(),\n          });\n          return prevChatData;\n        }, false).then(() => {\n          setChat('');\n          scrollbarRef.current?.scrollToBottom();\n        });\n        axios\n          .post(`/api/workspaces/${workspace}/dms/${id}/chats`, {\n            content: chat,\n          })\n          .then(() => {\n            revalidate();\n          })\n          .catch(console.error);\n      }\n    },\n    [chat, chatData, myData, userData, workspace, id],\n  );\n\n  const onMessage = useCallback((data: IDM) => {\n    //id : other party's id\n    if (data.SenderId === Number(id) && myData.id !== Number(id)) {\n      mutateChat((chatData) => {\n        chatData?.[0].unshift(data);\n        return chatData;\n      }, false).then(() => {\n        if (scrollbarRef.current) {\n          if (\n            scrollbarRef.current.getScrollHeight() <\n            scrollbarRef.current.getClientHeight() + scrollbarRef.current.getScrollTop() + 150\n          ) {\n            console.log('scrollToBottom!', scrollbarRef.current.getValues());\n            setTimeout(() => {\n              scrollbarRef.current?.scrollToBottom();\n            }, 50);\n          }\n        }\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    socket?.on('dm', onMessage);\n    return () => {\n      socket?.off('dm', onMessage);\n    };\n  }, [socket, onMessage]);\n\n  //scroll down when loading\n  useEffect(() => {\n    if (chatData?.length === 1) {\n      scrollbarRef.current?.scrollToBottom();\n    }\n  }, [chatData]);\n\n  useEffect(() => {\n    localStorage.setItem(`${workspace}-${id}`, new Date().getTime().toString());\n  }, [workspace, id]);\n\n  const onDrop = useCallback(\n    (e) => {\n      e.preventDefault();\n      console.log(e);\n      const formData = new FormData();\n      if (e.dataTransfer.items) {\n        // Use DataTransferItemList interface to access the file(s)\n        for (let i = 0; i < e.dataTransfer.items.length; i++) {\n          // If dropped items aren't files, reject them\n          if (e.dataTransfer.items[i].kind === 'file') {\n            const file = e.dataTransfer.items[i].getAsFile();\n            console.log('... file[' + i + '].name = ' + file.name);\n            formData.append('image', file);\n          }\n        }\n      } else {\n        // Use DataTransfer interface to access the file(s)\n        for (let i = 0; i < e.dataTransfer.files.length; i++) {\n          console.log('... file[' + i + '].name = ' + e.dataTransfer.files[i].name);\n          formData.append('image', e.dataTransfer.files[i]);\n        }\n      }\n      axios.post(`/api/workspaces/${workspace}/dms/${id}/images`, formData).then(() => {\n        setDragOver(false);\n        localStorage.setItem(`${workspace}-${id}`, new Date().getTime().toString());\n        mutateChat();\n      });\n    },\n    [workspace, id, mutateChat],\n  );\n\n  const onDragOver = useCallback((e) => {\n    e.preventDefault();\n    console.log(e);\n    setDragOver(true);\n  }, []);\n\n  if (!userData || !myData) {\n    return null;\n  }\n  const chatSections = makeSection(chatData ? chatData.flat().reverse() : []);\n\n  return (\n    <Container onDrop={onDrop} onDragOver={onDragOver}>\n      <Header>\n        <img src={gravatar.url(userData.email, { s: '24px', d: 'retro' })} alt={userData.nickname} />\n        <span>{userData.nickname}</span>\n      </Header>\n      <ChatList chatSections={chatSections} ref={scrollbarRef} setSize={setSize} isReachingEnd={isReachingEnd} />\n      <ChatBox chat={chat} onChangeChat={onChangeChat} onSubmitForm={onSubmitForm} />\n      {dragOver && <DragOver>업로드!</DragOver>}\n    </Container>\n  );\n};\n\nexport default DirectMessage;\n"],"names":["React","useCallback","useEffect","useRef","useState","Container","DragOver","Header","useParams","useSWR","useSWRInfinite","fetcher","gravatar","ChatBox","ChatList","useInput","axios","makeSection","useSocket","DirectMessage","workspace","id","userData","data","myData","scrollbarRef","chat","onChangeChat","setChat","index","chatData","mutateChat","mutate","revalidate","setSize","isEmpty","length","isReachingEnd","socket","dragOver","setDragOver","onSubmitForm","e","preventDefault","trim","savedChat","prevChatData","unshift","content","SenderId","Sender","ReceiverId","Receiver","createdAt","Date","then","current","scrollToBottom","post","catch","console","error","onMessage","Number","getScrollHeight","getClientHeight","getScrollTop","log","getValues","setTimeout","on","off","localStorage","setItem","getTime","toString","onDrop","formData","FormData","dataTransfer","items","i","kind","file","getAsFile","name","append","files","onDragOver","chatSections","flat","reverse","url","email","s","d","nickname"],"sourceRoot":""}