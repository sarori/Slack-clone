{"version":3,"file":"974.js","mappings":"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","sources":["webpack://slack-clone/./components/InviteChannelModal/index.tsx","webpack://slack-clone/./components/Menu/styles.tsx","webpack://slack-clone/./components/Modal/styles.tsx","webpack://slack-clone/./components/Modal/index.tsx","webpack://slack-clone/./hooks/useSocket.ts","webpack://slack-clone/./components/DMList/style.tsx","webpack://slack-clone/./components/EachChannel/index.tsx","webpack://slack-clone/./components/ChannelList/index.tsx","webpack://slack-clone/./components/EachDM/index.tsx","webpack://slack-clone/./components/DMList/index.tsx","webpack://slack-clone/./components/InviteWorkspaceModal/index.tsx","webpack://slack-clone/./components/Menu/index.tsx","webpack://slack-clone/./layouts/Workspace/styles.tsx","webpack://slack-clone/./components/CreateChannelModal/index.tsx","webpack://slack-clone/./layouts/Workspace/index.tsx"],"sourcesContent":["import Modal from '@components/Modal';\nimport useInput from '@hooks/useInput';\nimport { Input, Label, Button } from '@pages/SignUp/styles';\nimport { IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport axios from 'axios';\nimport React, { useCallback, FC } from 'react';\nimport { useParams } from 'react-router';\nimport { toast } from 'react-toastify';\nimport useSWR from 'swr';\n\ninterface Props {\n  show: boolean;\n  onCloseModal: () => void;\n  setShowInviteChannelModal: (flag: boolean) => void;\n}\n\nconst InviteChannelModal: FC<Props> = ({ show, onCloseModal, setShowInviteChannelModal }) => {\n  const { workspace, channel } = useParams<{ workspace: string; channel: string }>();\n  const [newMember, onChangeNewMember, setNewMember] = useInput('');\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher);\n  const { mutate: revalidateMembers } = useSWR<IUser[]>(\n    userData ? `/api/workspaces/${workspace}/channels/${channel}/members` : null,\n    fetcher,\n  );\n\n  const onInviteMember = useCallback(\n    (e) => {\n      e.preventDefault();\n      if (!newMember || !newMember.trim()) {\n        return;\n      }\n      axios\n        .post(`/api/workspaces/${workspace}/channels/${channel}/members`, {\n          email: newMember,\n        })\n        .then(() => {\n          revalidateMembers();\n          setShowInviteChannelModal(false);\n          setNewMember('');\n        })\n        .catch((error) => {\n          console.dir(error);\n          toast.error(error.response?.data, { position: 'bottom-center' });\n        });\n    },\n    [channel, newMember, revalidateMembers, setNewMember, setShowInviteChannelModal, workspace],\n  );\n\n  return (\n    <Modal show={show} onCloseModal={onCloseModal}>\n      <form onSubmit={onInviteMember}>\n        <Label id=\"member-label\">\n          <span>Invite members</span>\n          <Input id=\"member\" value={newMember} onChange={onChangeNewMember} />\n        </Label>\n        <Button type=\"submit\">초대하기</Button>\n      </form>\n    </Modal>\n  );\n};\n\nexport default InviteChannelModal;\n","import styled from '@emotion/styled';\n\nexport const CreateMenu = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  z-index: 1000;\n  & > div {\n    position: absolute;\n    display: inline-block;\n    --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 4px 12px 0 rgba(0, 0, 0, 0.12);\n    background-color: rgba(var(--sk_foreground_min_solid, 248, 248, 248), 1);\n    border-radius: 6px;\n    user-select: none;\n    min-width: 360px;\n    z-index: 512;\n    max-height: calc(100vh - 20px);\n    color: rgb(29, 28, 29);\n  }\n`;\n\nexport const CloseModalButton = styled.button`\n  position: absolute;\n  right: 10px;\n  top: 6px;\n  background: transparent;\n  border: none;\n  font-size: 30px;\n  cursor: pointer;\n`;\n","import styled from '@emotion/styled';\n\nexport const CreateModal = styled.div`\n  position: fixed;\n  text-align: center;\n  left: 0;\n  bottom: 0;\n  top: 0;\n  right: 0;\n  z-index: 1022;\n  & > div {\n    margin-top: 200px;\n    display: inline-block;\n    width: 440px;\n    background: white;\n    --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 4px 12px 0 rgba(0, 0, 0, 0.12);\n    background-color: rgba(var(--sk_foreground_min_solid, 248, 248, 248), 1);\n    border-radius: 6px;\n    user-select: none;\n    max-width: 440px;\n    padding: 30px 40px 0;\n    z-index: 1012;\n    position: relative;\n  }\n`;\n\nexport const CloseModalButton = styled.button`\n  position: absolute;\n  right: 10px;\n  top: 6px;\n  background: transparent;\n  border: none;\n  font-size: 30px;\n  cursor: pointer;\n`;\n","import { CloseModalButton } from '@components/Menu/styles';\nimport React, { FC, useCallback } from 'react';\nimport { CreateModal } from './styles';\n\ninterface Props {\n  show: boolean;\n  onCloseModal: () => void;\n}\n\nconst Modal: FC<Props> = ({ show, children, onCloseModal }) => {\n  const stopPropagation = useCallback((e) => {\n    e.stopPropagation();\n  }, []);\n  if (!show) {\n    return null;\n  }\n  return (\n    <CreateModal onClick={onCloseModal}>\n      <div onClick={stopPropagation}>\n        <CloseModalButton onClick={onCloseModal}>&times;</CloseModalButton>\n        {children}\n      </div>\n    </CreateModal>\n  );\n};\n\nexport default Modal;\n","import io from 'socket.io-client';\nimport { useCallback } from 'react';\n\nconst backUrl = 'http://localhost:3095';\n\nconst sockets: { [key: string]: SocketIOClient.Socket } = {};\nconst useSocket = (workspace?: string): [SocketIOClient.Socket | undefined, () => void] => {\n  console.log('rerender', workspace);\n  const disconnect = useCallback(() => {\n    if (workspace) {\n      sockets[workspace].disconnect();\n      delete sockets[workspace];\n    }\n  }, [workspace]);\n  if (!workspace) {\n    return [undefined, disconnect];\n  }\n  if (!sockets[workspace]) {\n    sockets[workspace] = io.connect(`${backUrl}/ws-${workspace}`, {\n      transports: ['websocket'],\n    });\n  }\n\n  return [sockets[workspace], disconnect];\n};\n\nexport default useSocket;\n","import styled from '@emotion/styled';\n\nexport const CollapseButton = styled.button<{ collapse: boolean }>`\n  background: transparent;\n  border: none;\n  width: 26px;\n  height: 26px;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  margin-left: 10px;\n  cursor: pointer;\n  ${({ collapse }) =>\n    collapse &&\n    `\n    & i {\n      transform: none;\n    }\n  `};\n`;\n","import { IChannel, IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport React, { useEffect, VFC } from 'react';\nimport { useLocation, useParams } from 'react-router';\nimport { NavLink } from 'react-router-dom';\nimport useSWR from 'swr';\n\ninterface Props {\n  channel: IChannel;\n}\n\nconst EachChannel: VFC<Props> = ({ channel }) => {\n  const { workspace } = useParams<{ workspace?: string }>();\n  const location = useLocation();\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher, {\n    dedupingInterval: 2000,\n  });\n  const date = localStorage.getItem(`${workspace}-${channel.name}`) || 0;\n  const { data: count, mutate } = useSWR<number>(\n    userData ? `/api/workspaces/${workspace}/channels/${channel.name}/unreads?after=${date}` : null,\n    fetcher,\n  );\n\n  useEffect(() => {\n    if (location.pathname === `/workspace/${workspace}/channel/${channel.name}`) {\n      mutate(0);\n    }\n  }, [mutate, location.pathname, workspace, channel]);\n  return (\n    <NavLink key={channel.name} activeClassName=\"selected\" to={`/workspace/${workspace}/channel/${channel.name}`}>\n      <span className={count !== undefined && count > 0 ? 'bold' : undefined}># {channel.name}</span>\n      {count !== undefined && count > 0 && <span className=\"count\">{count}</span>}\n    </NavLink>\n  );\n};\n\nexport default EachChannel;\n","import { CollapseButton } from '@components/DMList/style';\nimport EachChannel from '@components/EachChannel';\nimport { IChannel, IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport React, { FC, useCallback, useState } from 'react';\nimport { useLocation, useParams } from 'react-router';\nimport { NavLink } from 'react-router-dom';\nimport useSWR from 'swr';\n\nconst ChannelList: FC = () => {\n  const { workspace } = useParams<{ workspace?: string }>();\n  // const location = useLocation();\n  const {\n    data: userData,\n    error,\n    revalidate,\n    mutate,\n  } = useSWR<IUser>('http://localhost:3095/api/users', fetcher, {\n    dedupingInterval: 2000,\n  });\n  const { data: channelData } = useSWR<IChannel[]>(\n    userData ? `http://localhost:3095/api/workspaces/${workspace}/channels` : null,\n    fetcher,\n  );\n  const [channelCollapse, setChannelCollapse] = useState(false);\n  const [countList, setCountList] = useState<{ [key: number]: number | undefined }>({});\n\n  const toggleChannelCollapse = useCallback(() => {\n    setChannelCollapse((prev) => !prev);\n  }, []);\n  // const resetCount = useCallback(\n  //   (id) => () => {\n  //     setCountList((list) => {\n  //       return {\n  //         ...list,\n  //         [id]: undefined,\n  //       };\n  //     });\n  //   },\n  //   [workspace],\n  // );\n\n  return (\n    <>\n      <h2>\n        <CollapseButton collapse={channelCollapse} onClick={toggleChannelCollapse}>\n          <i\n            className=\"c-icon p-channel_sidebar__section_heading_expand p-channel_sidebar__section_heading_expand--show_more_feature c-icon--caret-right c-icon--inherit c-icon--inline\"\n            data-qa=\"channel-section-collapse\"\n            aria-hidden=\"true\"\n          />\n        </CollapseButton>\n        <span>Channels</span>\n      </h2>\n      <div>\n        {!channelCollapse &&\n          channelData?.map((channel) => {\n            return <EachChannel key={channel.id} channel={channel} />;\n          })}\n      </div>\n    </>\n  );\n};\n\nexport default ChannelList;\n","import { IChannel, IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport React, { useEffect, VFC } from 'react';\nimport { useLocation, useParams } from 'react-router';\nimport { NavLink } from 'react-router-dom';\nimport useSWR from 'swr';\n\ninterface Props {\n  member: IUser;\n  isOnline: boolean;\n}\n\nconst EachDM: VFC<Props> = ({ member, isOnline }) => {\n  const { workspace } = useParams<{ workspace?: string }>();\n  const location = useLocation();\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher, {\n    dedupingInterval: 2000,\n  });\n  const date = localStorage.getItem(`${workspace}-${member.id}`) || 0;\n  const { data: count, mutate } = useSWR<number>(\n    userData ? `/api/workspaces/${workspace}/dms/${member.id}/unreads?ater=${date}` : null,\n    fetcher,\n  );\n\n  useEffect(() => {\n    if (location.pathname === `/workspace/${workspace}/dm/${member.id}`) {\n      mutate(0);\n    }\n  }, [mutate, location.pathname, workspace, member]);\n\n  return (\n    <NavLink key={member.id} activeClassName=\"selected\" to={`/workspace/${workspace}/dm/${member.id}`}>\n      <i\n        className={`c-icon p-channel_sidebar__presence_icon p-channel_sidebar__presence_icon--dim_enabled c-presence ${\n          isOnline ? 'c-presence--active c-icon--presence-online' : 'c-icon--presence-offline'\n        }`}\n        aria-hidden=\"true\"\n        data-qa=\"presence_indicator\"\n        data-qa-presence-self=\"false\"\n        data-qa-presence-active=\"false\"\n        data-qa-presence-dnd=\"false\"\n      />\n      <span className={count && count > 0 ? 'bold' : undefined}>{member.nickname}</span>\n      {member.id === userData?.id && <span> (나)</span>}\n      {(count && count > 0 && <span className=\"count\">{count}</span>) || null}\n    </NavLink>\n  );\n};\n\nexport default EachDM;\n","// import useSocket from '@hooks/useSocket';\nimport { CollapseButton } from '@components/DMList/style';\nimport EachDM from '@components/EachDM';\nimport useSocket from '@hooks/useSocket';\nimport { IUser, IUserWithOnline } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport React, { FC, useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { NavLink } from 'react-router-dom';\nimport useSWR from 'swr';\n\nconst DMList: FC = () => {\n  const { workspace } = useParams<{ workspace?: string }>();\n  const {\n    data: userData,\n    error,\n    revalidate,\n    mutate,\n  } = useSWR<IUser>('/api/users', fetcher, {\n    dedupingInterval: 2000, // 2초\n  });\n  const { data: memberData } = useSWR<IUserWithOnline[]>(\n    userData ? `/api/workspaces/${workspace}/members` : null,\n    fetcher,\n  );\n  const [socket] = useSocket(workspace);\n  const [channelCollapse, setChannelCollapse] = useState(false);\n  const [onlineList, setOnlineList] = useState<number[]>([]);\n\n  const toggleChannelCollapse = useCallback(() => {\n    setChannelCollapse((prev) => !prev);\n  }, []);\n\n  useEffect(() => {\n    console.log('DMList: workspace 바꼈다', workspace);\n    setOnlineList([]);\n  }, [workspace]);\n\n  useEffect(() => {\n    socket?.on('onlineList', (data: number[]) => {\n      setOnlineList(data);\n    });\n    // socket?.on('dm', onMessage);\n    // console.log('socket on dm', socket?.hasListeners('dm'), socket);\n    return () => {\n      // socket?.off('dm', onMessage);\n      // console.log('socket off dm', socket?.hasListeners('dm'));\n      socket?.off('onlineList');\n    };\n  }, [socket]);\n\n  return (\n    <>\n      <h2>\n        <CollapseButton collapse={channelCollapse} onClick={toggleChannelCollapse}>\n          <i\n            className=\"c-icon p-channel_sidebar__section_heading_expand p-channel_sidebar__section_heading_expand--show_more_feature c-icon--caret-right c-icon--inherit c-icon--inline\"\n            data-qa=\"channel-section-collapse\"\n            aria-hidden=\"true\"\n          />\n        </CollapseButton>\n        <span>Direct Messages</span>\n      </h2>\n      <div>\n        {!channelCollapse &&\n          memberData?.map((member) => {\n            const isOnline = onlineList.includes(member.id);\n            return <EachDM key={member.id} member={member} isOnline={isOnline} />;\n          })}\n      </div>\n    </>\n  );\n};\nexport default DMList;\n","import Modal from '@components/Modal';\nimport React, { FC, useCallback } from 'react';\nimport { Button, Input, Label } from '@pages/SignUp/styles';\nimport useInput from '@hooks/useInput';\nimport axios from 'axios';\nimport { useParams } from 'react-router';\nimport { toast } from 'react-toastify';\nimport useSWR from 'swr';\nimport { IChannel, IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\n\ninterface Props {\n  show: boolean;\n  onCloseModal: () => void;\n  setShowInviteWorkspaceModal: (flag: boolean) => void;\n}\n\nconst InviteWorkspaceModal: FC<Props> = ({ show, onCloseModal, setShowInviteWorkspaceModal }) => {\n  const { workspace } = useParams<{ workspace: string; channel: string }>();\n  const [newMember, onChangeNewMember, setNewMember] = useInput('');\n  const { data: userData } = useSWR<IUser>('http://localhost:3095/api/users', fetcher);\n  const { revalidate: revalidateChannel } = useSWR<IChannel[]>(\n    userData ? `http://localhost:3095/api/workspace/${workspace}/channels` : null,\n    fetcher,\n  );\n\n  const onInviteMember = useCallback(\n    (e) => {\n      e.preventDefault();\n      if (!newMember || !newMember.trim()) {\n        return;\n      }\n      axios\n        .post(`http://localhost:3095/api/workspace/${workspace}/members`, {\n          email: newMember,\n        })\n        .then(() => {\n          revalidateChannel();\n          setShowInviteWorkspaceModal(false);\n          setNewMember('');\n        })\n        .catch((error) => {\n          console.dir(error);\n          toast.error(error.response?.data, { position: 'bottom-center' });\n        });\n    },\n    [workspace, newMember],\n  );\n\n  return (\n    <Modal show={show} onCloseModal={onCloseModal}>\n      <form onSubmit={onInviteMember}>\n        <Label id=\"member-label\">\n          <span>Email</span>\n          <Input id=\"member\" type=\"email\" value={newMember} onChange={onChangeNewMember} />\n        </Label>\n\n        <Button type=\"submit\">Invite</Button>\n      </form>\n    </Modal>\n  );\n};\n\nexport default InviteWorkspaceModal;\n","import React, { CSSProperties, FC, useCallback } from 'react';\nimport { CloseModalButton, CreateMenu } from './styles';\n\ninterface Props {\n  show: boolean;\n  onCloseModal: (e: any) => void;\n  style: CSSProperties;\n  closeButton?: boolean;\n}\n\nconst Menu: FC<Props> = ({ children, style, show, onCloseModal, closeButton }) => {\n  const stopPropagation = useCallback((e) => {\n    e.stopPropagation();\n  }, []);\n  if (!show) return null;\n  return (\n    <CreateMenu onClick={onCloseModal}>\n      <div style={style} onClick={stopPropagation}>\n        {closeButton && <CloseModalButton onClick={onCloseModal}>&times;</CloseModalButton>}\n        {children}\n      </div>\n    </CreateMenu>\n  );\n};\n\nMenu.defaultProps = {\n  closeButton: true,\n};\n\nexport default Menu;\n","import styled from '@emotion/styled';\n\nexport const RightMenu = styled.div`\n  float: right;\n`;\n\nexport const Header = styled.header`\n  height: 38px;\n  background: #350d36;\n  color: #ffffff;\n  box-shadow: 0 1px 0 0 rgba(255, 255, 255, 0.1);\n  padding: 5px;\n  text-align: center;\n`;\n\nexport const ProfileImg = styled.img`\n  width: 28px;\n  height: 28px;\n  position: absolute;\n  top: 5px;\n  right: 16px;\n`;\n\nexport const ProfileModal = styled.div`\n  display: flex;\n  padding: 20px;\n  & img {\n    display: flex;\n  }\n  & > div {\n    display: flex;\n    flex-direction: column;\n    margin-left: 10px;\n  }\n  & #profile-name {\n    font-weight: bold;\n    display: inline-flex;\n  }\n  & #profile-active {\n    font-size: 13px;\n    display: inline-flex;\n  }\n`;\n\nexport const LogOutButton = styled.button`\n  border: none;\n  width: 100%;\n  border-top: 1px solid rgb(29, 28, 29);\n  background: transparent;\n  display: block;\n  height: 33px;\n  padding: 5px 20px 5px;\n  outline: none;\n  cursor: pointer;\n`;\n\nexport const WorkspaceWrapper = styled.div`\n  display: flex;\n  flex: 1;\n`;\n\nexport const Workspaces = styled.div`\n  width: 65px;\n  display: inline-flex;\n  flex-direction: column;\n  align-items: center;\n  background: #3f0e40;\n  border-top: 1px solid rgb(82, 38, 83);\n  border-right: 1px solid rgb(82, 38, 83);\n  vertical-align: top;\n  text-align: center;\n  padding: 15px 0 0;\n`;\n\nexport const Channels = styled.nav`\n  width: 260px;\n  display: inline-flex;\n  flex-direction: column;\n  background: #3f0e40;\n  color: rgb(188, 171, 188);\n  vertical-align: top;\n  & a {\n    padding-left: 36px;\n    color: inherit;\n    text-decoration: none;\n    height: 28px;\n    line-height: 28px;\n    display: flex;\n    align-items: center;\n    &.selected {\n      color: white;\n    }\n  }\n  & .bold {\n    color: white;\n    font-weight: bold;\n  }\n  & .count {\n    margin-left: auto;\n    background: #cd2553;\n    border-radius: 16px;\n    display: inline-block;\n    font-size: 12px;\n    font-weight: 700;\n    height: 18px;\n    line-height: 18px;\n    padding: 0 9px;\n    color: white;\n    margin-right: 16px;\n  }\n  & h2 {\n    height: 36px;\n    line-height: 36px;\n    margin: 0;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n    font-size: 15px;\n  }\n`;\n\nexport const WorkspaceName = styled.button`\n  height: 64px;\n  line-height: 64px;\n  border: none;\n  width: 100%;\n  text-align: left;\n  border-top: 1px solid rgb(82, 38, 83);\n  border-bottom: 1px solid rgb(82, 38, 83);\n  font-weight: 900;\n  font-size: 24px;\n  background: transparent;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n  padding: 0;\n  padding-left: 16px;\n  margin: 0;\n  color: white;\n  cursor: pointer;\n`;\n\nexport const MenuScroll = styled.div`\n  height: calc(100vh - 102px);\n  overflow-y: auto;\n`;\n\nexport const WorkspaceModal = styled.div`\n  padding: 10px 0 0;\n  & h2 {\n    padding-left: 20px;\n  }\n  & > button {\n    width: 100%;\n    height: 28px;\n    padding: 4px;\n    border: none;\n    background: transparent;\n    border-top: 1px solid rgb(28, 29, 28);\n    cursor: pointer;\n    &:last-of-type {\n      border-bottom: 1px solid rgb(28, 29, 28);\n    }\n  }\n`;\n\nexport const Chats = styled.div`\n  flex: 1;\n`;\n\nexport const AddButton = styled.button`\n  color: white;\n  font-size: 24px;\n  display: inline-block;\n  width: 40px;\n  height: 40px;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n`;\n\nexport const WorkspaceButton = styled.button`\n  display: inline-block;\n  width: 40px;\n  height: 40px;\n  border-radius: 10px;\n  background: white;\n  border: 3px solid #3f0e40;\n  margin-bottom: 15px;\n  font-size: 18px;\n  font-weight: 700;\n  color: black;\n  cursor: pointer;\n`;\n","import Modal from '@components/Modal';\nimport React, { useCallback, VFC } from 'react';\nimport { Button, Input, Label } from '@pages/SignUp/styles';\nimport useInput from '@hooks/useInput';\nimport axios from 'axios';\nimport { useParams } from 'react-router';\nimport { toast } from 'react-toastify';\nimport useSWR from 'swr';\nimport { IChannel, IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\n\ninterface Props {\n  show: boolean;\n  onCloseModal: () => void;\n  setShowCreateChannelModal: (flag: boolean) => void;\n}\n\nconst CreateChannelModal: VFC<Props> = ({ show, onCloseModal, setShowCreateChannelModal }) => {\n  const [newChannel, onChangeNewChannel, setNewChannel] = useInput('');\n  const { workspace, channel } = useParams<{ workspace: string; channel: string }>();\n  const {\n    data: userData,\n    error,\n    mutate,\n    revalidate,\n  } = useSWR<IUser | false>('http://localhost:3095/api/users', fetcher, {\n    dedupingInterval: 2000,\n  });\n\n  const { data: channelData, revalidate: revalidateChannel } = useSWR<IChannel[]>(\n    userData ? `http://localhost:3095/api/workspaces/${workspace}/channels` : null,\n    fetcher,\n  );\n\n  const onCreateChannel = useCallback(\n    (e) => {\n      e.preventDefault();\n      axios\n        .post(\n          `http://localhost:3095/api/workspaces/${workspace}/channels`,\n          {\n            name: newChannel,\n          },\n          {\n            withCredentials: true,\n          },\n        )\n        .then((response) => {\n          setShowCreateChannelModal(false);\n          revalidateChannel();\n          setNewChannel('');\n        })\n        .catch((error) => {\n          console.dir(error);\n          toast.error(error.response?.data, { position: 'bottom-center' });\n        });\n    },\n    [newChannel],\n  );\n\n  if (!show) return null;\n  return (\n    <Modal show={show} onCloseModal={onCloseModal}>\n      <form onSubmit={onCreateChannel}>\n        <Label id=\"channel-label\">\n          <span>Channel</span>\n          <Input id=\"channel\" value={newChannel} onChange={onChangeNewChannel} />\n        </Label>\n\n        <Button type=\"submit\">Create</Button>\n      </form>\n    </Modal>\n  );\n};\n\nexport default CreateChannelModal;\n","import ChannelList from '@components/ChannelList';\nimport DMList from '@components/DMList';\nimport InviteChannelModal from '@components/InviteChannelModal';\nimport InviteWorkspaceModal from '@components/InviteWorkspaceModal';\nimport Menu from '@components/Menu';\nimport Modal from '@components/Modal';\nimport useInput from '@hooks/useInput';\n// import useSocket from '@hooks/useSocket';\nimport {\n  AddButton,\n  Channels,\n  Chats,\n  Header,\n  LogOutButton,\n  MenuScroll,\n  ProfileImg,\n  ProfileModal,\n  RightMenu,\n  WorkspaceButton,\n  WorkspaceModal,\n  WorkspaceName,\n  Workspaces,\n  WorkspaceWrapper,\n} from '@layouts/Workspace/styles';\nimport loadable from '@loadable/component';\nimport { Button, Input, Label } from '@pages/SignUp/styles';\nimport { IChannel, IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport axios from 'axios';\nimport React, { VFC, useCallback, useState, useEffect } from 'react';\nimport { Redirect, useParams } from 'react-router';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport useSWR from 'swr';\nimport gravatar from 'gravatar';\nimport { toast } from 'react-toastify';\nimport CreateChannelModal from '@components/CreateChannelModal';\nimport useSocket from '@hooks/useSocket';\n\nconst Channel = loadable(() => import('@pages/Channel'));\nconst DirectMessage = loadable(() => import('@pages/DirectMessage'));\n\nconst Workspace: VFC = () => {\n  const [showUserMenu, setShowUserMenu] = useState(false);\n  const [showCreateWorkspaceModal, setShowCreateWorkspaceModal] = useState(false);\n  const [showInviteWorkspaceModal, setShowInviteWorkspaceModal] = useState(false);\n  const [showInviteChannelModal, setShowInviteChannelModal] = useState(false);\n  const [showWorkspaceModal, setShowWorkspaceModal] = useState(false);\n  const [showCreateChannelModal, setShowCreateChannelModal] = useState(false);\n  const [newWorkspace, onChangeNewWorkspace, setNewWorkpsace] = useInput('');\n  const [newUrl, onChangeNewUrl, setNewUrl] = useInput('');\n\n  const { workspace } = useParams<{ workspace: string }>();\n  const {\n    data: userData,\n    error,\n    revalidate,\n    mutate,\n  } = useSWR<IUser | false>('/api/users', fetcher, {\n    dedupingInterval: 2000, // 2초\n  });\n  const { data: channelData } = useSWR<IChannel[]>(userData ? `/api/workspaces/${workspace}/channels` : null, fetcher);\n  const { data: memberData } = useSWR<IUser[]>(userData ? `/api/workspaces/${workspace}/members` : null, fetcher);\n  const [socket, disconnect] = useSocket(workspace);\n\n  useEffect(() => {\n    if (channelData && userData && socket) {\n      console.log(socket);\n      socket.emit('login', { id: userData.id, channels: channelData.map((v) => v.id) });\n    }\n  }, [socket, channelData, userData]);\n  useEffect(() => {\n    return () => {\n      disconnect();\n    };\n  }, [workspace, disconnect]);\n\n  const onLogout = useCallback(() => {\n    axios\n      .post('/api/users/logout', null, {\n        withCredentials: true,\n      })\n      .then(() => {\n        mutate(false, false);\n      });\n  }, [mutate]);\n\n  const onCloseUserProfile = useCallback((e) => {\n    e.stopPropagation();\n    setShowUserMenu(false);\n  }, []);\n\n  const onClickUserProfile = useCallback(() => {\n    setShowUserMenu((prev) => !prev);\n  }, []);\n\n  const onClickCreateWorkspace = useCallback(() => {\n    setShowCreateWorkspaceModal(true);\n  }, []);\n\n  const onCreateWorkspace = useCallback(\n    (e) => {\n      e.preventDefault();\n      if (!newWorkspace || !newWorkspace.trim()) return;\n      if (!newUrl || !newUrl.trim()) return;\n      axios\n        .post(\n          '/api/workspaces',\n          {\n            workspace: newWorkspace,\n            url: newUrl,\n          },\n          {\n            withCredentials: true,\n          },\n        )\n        .then(() => {\n          revalidate();\n          setShowCreateWorkspaceModal(false);\n          setNewWorkpsace('');\n          setNewUrl('');\n        })\n        .catch((error) => {\n          console.dir(error);\n          toast.error(error.response?.data, { position: 'bottom-center' });\n        });\n    },\n    [newWorkspace, newUrl],\n  );\n\n  const onCloseModal = useCallback(() => {\n    setShowCreateWorkspaceModal(false);\n    setShowCreateChannelModal(false);\n    setShowInviteWorkspaceModal(false);\n    setShowInviteChannelModal(false);\n  }, []);\n\n  const toggleWorkspaceModal = useCallback(() => {\n    setShowWorkspaceModal((prev) => !prev);\n  }, []);\n\n  const onClickAddChannel = useCallback(() => {\n    setShowCreateChannelModal(true);\n  }, []);\n\n  const onClickInviteWorkspace = useCallback(() => {\n    setShowInviteWorkspaceModal(true);\n  }, []);\n\n  if (!userData) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <div>\n      <Header>\n        <RightMenu>\n          <span onClick={onClickUserProfile}>\n            <ProfileImg src={gravatar.url(userData.email, { s: '28px', d: 'retro' })} alt={userData.nickname} />\n            {showUserMenu && (\n              <Menu style={{ right: 0, top: 38 }} show={showUserMenu} onCloseModal={onCloseUserProfile}>\n                <ProfileModal>\n                  <img src={gravatar.url(userData.nickname, { s: '36px', d: 'retro' })} alt={userData.nickname} />\n                  <div>\n                    <span id=\"profile-name\">{userData.nickname}</span>\n                    <span id=\"profile-active\">Active</span>\n                  </div>\n                </ProfileModal>\n                <LogOutButton onClick={onLogout}>로그아웃</LogOutButton>\n              </Menu>\n            )}\n          </span>\n        </RightMenu>\n      </Header>\n      <WorkspaceWrapper>\n        <Workspaces>\n          {userData?.Workspaces.map((ws) => {\n            return (\n              <Link key={ws.id} to={`/workspace/${123}/channel/일반`}>\n                <WorkspaceButton>{ws.name.slice(0, 1).toUpperCase()}</WorkspaceButton>\n              </Link>\n            );\n          })}\n          <AddButton onClick={onClickCreateWorkspace}>+</AddButton>\n        </Workspaces>\n        <Channels>\n          <WorkspaceName onClick={toggleWorkspaceModal}>Sleact</WorkspaceName>\n          <MenuScroll>\n            <Menu show={showWorkspaceModal} onCloseModal={toggleWorkspaceModal} style={{ top: 95, left: 80 }}>\n              <WorkspaceModal>\n                <h2>Sleact</h2>\n                <button onClick={onClickInviteWorkspace}>워크스페이스에 사용자 초대</button>\n                <button onClick={onClickAddChannel}>채널 만들기</button>\n                <button onClick={onLogout}>로그아웃</button>\n              </WorkspaceModal>\n            </Menu>\n            <ChannelList />\n            <DMList />\n          </MenuScroll>\n        </Channels>\n        <Chats>\n          <Switch>\n            <Route path=\"/workspace/:workspace/channel/:channel\" component={Channel} />\n            <Route path=\"/workspace/:workspace/dm/:id\" component={DirectMessage} />\n          </Switch>\n        </Chats>\n      </WorkspaceWrapper>\n      <Modal show={showCreateWorkspaceModal} onCloseModal={onCloseModal}>\n        <form onSubmit={onCreateWorkspace}>\n          <Label id=\"workspace-label\">\n            <span>워크스페이스 이름</span>\n            <Input id=\"workspace\" value={newWorkspace} onChange={onChangeNewWorkspace} />\n          </Label>\n          <Label id=\"workspace-url-label\">\n            <span>워크스페이스 url</span>\n            <Input id=\"workspace\" value={newUrl} onChange={onChangeNewUrl} />\n          </Label>\n          <Button type=\"submit\">생성하기</Button>\n        </form>\n      </Modal>\n      <CreateChannelModal\n        show={showCreateChannelModal}\n        onCloseModal={onCloseModal}\n        setShowCreateChannelModal={setShowCreateChannelModal}\n      />\n      <InviteWorkspaceModal\n        show={showInviteWorkspaceModal}\n        onCloseModal={onCloseModal}\n        setShowInviteWorkspaceModal={setShowInviteWorkspaceModal}\n      />\n      <InviteChannelModal\n        show={showInviteChannelModal}\n        onCloseModal={onCloseModal}\n        setShowInviteChannelModal={setShowInviteChannelModal}\n      />\n    </div>\n  );\n};\n\nexport default Workspace;\n"],"names":["show","onCloseModal","setShowInviteChannelModal","useParams","workspace","channel","useInput","newMember","onChangeNewMember","setNewMember","userData","useSWR","fetcher","data","revalidateMembers","mutate","onInviteMember","useCallback","e","preventDefault","trim","axios","email","then","catch","error","console","dir","toast","response","position","onSubmit","id","value","onChange","type","CreateMenu","CloseModalButton","CreateModal","children","stopPropagation","onClick","sockets","log","disconnect","io","transports","undefined","CollapseButton","collapse","location","useLocation","dedupingInterval","date","localStorage","getItem","name","count","useEffect","pathname","key","activeClassName","to","className","channelData","revalidate","useState","channelCollapse","setChannelCollapse","toggleChannelCollapse","prev","map","member","isOnline","nickname","memberData","socket","useSocket","onlineList","setOnlineList","on","off","includes","setShowInviteWorkspaceModal","revalidateChannel","Modal","Menu","style","closeButton","defaultProps","RightMenu","Header","ProfileImg","ProfileModal","LogOutButton","WorkspaceWrapper","Workspaces","Channels","WorkspaceName","MenuScroll","WorkspaceModal","Chats","AddButton","WorkspaceButton","setShowCreateChannelModal","newChannel","onChangeNewChannel","setNewChannel","onCreateChannel","withCredentials","Channel","loadable","DirectMessage","showUserMenu","setShowUserMenu","showCreateWorkspaceModal","setShowCreateWorkspaceModal","showInviteWorkspaceModal","showInviteChannelModal","showWorkspaceModal","setShowWorkspaceModal","showCreateChannelModal","newWorkspace","onChangeNewWorkspace","setNewWorkpsace","newUrl","onChangeNewUrl","setNewUrl","emit","channels","v","onLogout","onCloseUserProfile","onClickUserProfile","onClickCreateWorkspace","onCreateWorkspace","url","toggleWorkspaceModal","onClickAddChannel","onClickInviteWorkspace","src","gravatar","s","d","alt","right","top","ws","slice","toUpperCase","left","path","component","InviteChannelModal"],"sourceRoot":""}